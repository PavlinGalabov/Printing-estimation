# Generated by Django 5.2.4 on 2025-07-22 15:47

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='OperationCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#007bff', help_text='Hex color code for UI display', max_length=7)),
                ('sort_order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Operation Category',
                'verbose_name_plural': 'Operation Categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PaperSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('width_cm', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0.1)])),
                ('height_cm', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0.1)])),
                ('description', models.CharField(blank=True, max_length=200)),
                ('is_standard', models.BooleanField(default=False, help_text='Standard industry size (A4, A3, etc.)')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PaperType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('weight_gsm', models.PositiveIntegerField(help_text='Weight in grams per square meter')),
                ('price_per_kg', models.DecimalField(decimal_places=2, help_text='Price per kilogram', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Specific operation name (e.g., 'Color Printing Quarter Size')", max_length=150)),
                ('description', models.TextField(blank=True)),
                ('makeready_price', models.DecimalField(decimal_places=2, default=0, help_text='Fixed setup cost (e.g., 10.00)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('price_per_sheet', models.DecimalField(decimal_places=4, default=0, help_text='Cost per sheet processed (e.g., 0.005)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('plate_price', models.DecimalField(decimal_places=2, default=0, help_text='Cost per plate/color (for printing operations)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('base_waste_sheets', models.PositiveIntegerField(default=0, help_text='Base waste sheets (e.g., 30 for printing)')),
                ('waste_percentage', models.DecimalField(decimal_places=4, default=0, help_text='Waste percentage per sheet (e.g., 0.0001 for 0.01%)', max_digits=5)),
                ('makeready_time_minutes', models.PositiveIntegerField(default=0, help_text='Setup time in minutes (e.g., 15)')),
                ('cleaning_time_minutes', models.PositiveIntegerField(default=0, help_text='Cleaning time per color in minutes (e.g., 20)')),
                ('sheets_per_minute', models.PositiveIntegerField(default=1, help_text='Processing speed (sheets per minute, e.g., 80)')),
                ('divides_quantity_by', models.PositiveIntegerField(default=1, help_text='Divide current quantity by this number (for cutting operations)')),
                ('multiplies_quantity_by', models.PositiveIntegerField(default=1, help_text='Multiply current quantity by this number')),
                ('uses_colors', models.BooleanField(default=False, help_text='Operation cost/time depends on number of colors')),
                ('uses_front_colors_only', models.BooleanField(default=False, help_text='Uses only front colors for cleaning time calculation')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operations', to='operations.operationcategory')),
            ],
            options={
                'ordering': ['category__sort_order', 'name'],
                'unique_together': {('name', 'category')},
            },
        ),
    ]
